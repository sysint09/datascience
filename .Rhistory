good<-complete.cases(x["Ozone"])
x[good,"Ozone"]
mean(x[good,"Ozone"])
x
x["Ozone">31]
x[$Ozone>31]
x[Ozone>31]
x["Ozone">31]
x["Ozone">31,]
x["Ozone"]>31
x[x["Ozone"]>31]
x["Ozone">31]
x[x["Ozone"]>31]
x$Ozone
x[Ozone>31,]
x["Ozone">31,]
x[x$Ozone>31]
x[x$Ozone>31,]
x[x$Ozone>31,x$Temp>90]
x[x$Ozone>31,x$Temp>90,]
x[x$Temp>90,]
x[x$Temp>90]
x$Temp>90
x$Temp>90 * x$Ozone>31
c1<-x$Temp>90
c2<-x$Ozone>31
c1*c2
match<_c1*c2
match<-c1*c2
x$Solar.R[match]
x$Solar.R
match
x[match,x$Solar.R]
x[match,"Solar.R"]
x[match,]
class(c1)
class(c2)
class(match)
as.logical(match)
x[as.logical(match),"Solar.R"]
mean(x[as.logical(match),"Solar.R"])
x[as.logical(match),"Solar.R"]
x[as.logical(match),"Solar.R"]
x
x[$Month==6]
x[x$Month==6]
x$Month==6
x[x$Month==6,x$Temp]
x[x$Month==6,]
x[x$Month==6,"Temp"]
mean(x[x$Month==6,"Temp"])
mean(x[x$Month==5,"Ozone"])
max(x[x$Month==5,"Ozone"])
x[x$Month==5,"Ozone"]
read.csv(hw1_data.cvs)
read.csv("hw1_data.cvs"")
q
""
read.csv("hw1_data.cvs")
read.csv("hw1_data.cvs")
read.csv("hw1_data.csv")
data<-read.csv("hw1_data.csv")
data[153]
data[153;]
data[153,]
data[153,Wind]
data["Wind"]
data[153,"Wind"]
data[145,"Wind"]
data["Month",Wind"]
""
data["Month","Wind"]
data[136]["Wind"]
data[136,"Wind"]
data
good<-complete.cases(data)
data
View(data)
View(data)
View(data)
data<-read.csv("hw1_data.csv")
x<-4L
class(x)
x<_c(4,TRUE)
x<-c(4,TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x<-1:4
y<-2
x
y
x+y
data
data[1:2,]
data[152:153,]
data[47,"Ozone"]
data["Ozone"]
is.na(data["Ozone"])
complete.cases(data["Ozone"])
View(data)
sum(complete.cases(data["Ozone"]))
View(data)
View(data)
good<-is.na(data["Ozone"])
z<-data[!good,"Ozone"]
mean(z)
a<-data[Ozone>31,]
a<-data["Ozone">31,]
a
a<-data[data["Ozone">31,]
""
a<-data[data["Ozone"]>31,]
b<-a[a["Temp"]>90]
a
a<-data[data["Ozone">31,]
""
a<-data[data["Ozone">31,]]
a<-data[data["Ozone"]>31,]
a
b<-a[a["Temp"]>90]
b
a
b<-a[a["Temp"]>90,]
b
mean(b["Solar.R"])
b["Solar.R"]
bad<-as.na(b["Solar.R"])
bad<-is.na(b["Solar.R"])
c<-b[!bad,"Solar.R"]
mean(c)
a<-data[data["Month"]==6,"Temp"]
a
mean(a)
a<-data[data["Month"]==5,"Ozone"]
a
max(a)
bad<-is.na(a)
max(a[!bad])
install.packages("swirl")
R.version.string
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl
swirl()
5+7
x<-5+7
x
y<-x-3
y
type c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z,555,5)
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1:4)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 +
| 100
z*2+100
z*2+1000
my_div
swirl()
add2<-function(x,y){
x+y
}
add2(3,5)
above <-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,12)
above <-function(x,n=10){
use<-x>n
x[use]
}
above(x)
library("swirl")
ls()
rm(list=ls())
swirl()
1:20
pi:10
15:1
?now
?:
info()
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
?seq()
seq_along(my_seq)
rep(0,times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Walter")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep =" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf/inf
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
y>0
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo= 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect[bar]
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<_c(4,5)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
exit
quit
ls()
rm(ls())
library(swirl)
rm(list=ls())
swirl()
class(my_vector)
my_matrix<-my_vector
?matrix
my-matrix2(data=1:20,nrow=4,ncol=5)
my_matrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(vector,my_matrix)
cbind(patients,my_matrix)
my_data<_data.frame(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
?data.frame
?colnames
colnames(my_data)<
colnames(my_data)
colnames(my_data)<-cnames
colnames(my_data)
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
?which
which(ints>7)
any(ints<0)
all(ints>0)
View(my_data)
View(my_data)
swirl()
swirl()
library(swirl)
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flags_shape,range)
lapply(flag_shape,range)
lapply(flag_shapes,range)
shape_mat<-spally(flag_shapes,range)
shape_mat<-saplly(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5,5,5,6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply<-sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
FUN(X[[1]])
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags, summary)
flags
flags$red
flags
?'$'
class(flags)
head(flags)
tapply(flags$population, flags$landmass, summary)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
?table
table(plants$Active_growth_Period)
table(plants$Active_Growth_Period)
plants$Active_Growth_Period
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,c(0.3,0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.5, 0.5))
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
flips2<-rbinom(100, size = 2, prob = 0.7)
flips2
flips2<-rbinom(100, size = 4, prob = 0.7)
flips2
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(10,10)
rpois(5,10)
replicate(100, rpois(5, 10))
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
d1
unclass(d1)
d1
d2<-as.date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<_strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
?strptime
t3
Sys.time()> t1
Sys.time()- t1
difftime(Sys.time(), t1, units = 'days')
ok()
quit()
pwd
wd
pwd()
wd()
setwd("Datascience")
setwd("GIT/datascience")
source("cachevector.R")
?numeric
x=c(1,2,3,4)
a=makeVector(x)
class(a)
str(a)
str(a)
table(str(a))
str(a)
y=c(1,3,4,2)
cachemean(y)
a=makeVector(x)
a=makeVector(y)
str(a)
a=makeVector(x)
y
x
b=makeVector(y)
cachecector(y)
cachevector(y)
cacheVector(y)
cachemean(y)
cachemean(b)
z=c(2,3,4,5)
cachemean(z)
